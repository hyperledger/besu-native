---
version: 2.1
executors:
  besu_executor_med_linux: # 2cpu, 4G ram
    docker:
      - image: cimg/openjdk:11.0
    resource_class: medium
    working_directory: ~/project
    environment:
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2
  besu_executor_med_macos: # 2cpu, 4G ram
    macos:
      xcode: "12.5.1"
    resource_class: medium
    working_directory: ~/project
    environment:
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2
      HOMEBREW_NO_AUTO_UPDATE: true
  besu_executor_med_linux_arm64: # 2cpu, 8G ram
    machine:
      image: ubuntu-2004:current
    resource_class: arm.medium
    working_directory: ~/project
    environment:
      architecture: "arm64"
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

# besu_executor_med_windows: # 2cpu, 4G ram
#   machine:
#     image: "windows-server-2019-vs2019:stable"
#     resource_class: medium
#     shell: powershell.exe -ExecutionPolicy Bypass
#   working_directory: ~/project
#   environment:
#     GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

commands:
  checkout_code:
    description: "Prepare - Checkout code"
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update
  prepare_linux:
    description: "Prepare - Linux x86_64"
    steps:
      - run:
          name: Install Packages - build tools
          command: |
            # secp256k1 dependencies
            sudo apt-get update
            sudo apt-get install -y autoconf build-essential libtool automake patchelf
            # rust dependencies
            export CARGO_HOME="$HOME/.cargo"
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.62.1
  prepare_macos:
    description: "Prepare - macOS"
    steps:
      - run:
          name: Install Packages - build tools
          command: |
            # secp256k1 dependencies
            brew install autoconf automake libtool
            # rust dependencies
            export CARGO_HOME="$HOME/.cargo"
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.62.1
            # install both x86 and arm64 toolchains
            export PATH="$HOME/.cargo/bin:$PATH"
            rustup target add x86_64-apple-darwin
            rustup target add aarch64-apple-darwin

jobs:
  native-build-linux-x86-64:
    executor: besu_executor_med_linux
    environment:
      SKIP_GRADLE: true
    steps:
      - checkout_code
      - prepare_linux
      - run:
          name: build
          command: |
            ./build.sh
      - persist_to_workspace:
          root: .
          paths:
            - altbn128/build/linux-gnu-x86_64/lib/*.so*
            - blake2bf/build/linux-gnu-x86_64/lib/*.so*
            - bls12-381/build/linux-gnu-x86_64/lib/*.so*
            - secp256k1/build/linux-gnu-x86_64/lib/*.so*
            - ipa-multipoint/build/linux-gnu-x86_64/lib/*.so
            - secp256r1/besu-native-ec/release/linux-gnu-x86_64/*.so
      - store_artifacts:
          name: Linux altbn128 native build artifacts
          path:  altbn128/build/linux-gnu-x86_64/lib
          destination: altbn128_linux_x86_64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux blake2bf native build artifacts
          path:  blake2bf/build/linux-gnu-x86_64/lib
          destination: blake2bf_linux_x86_64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux bls12-381 native build artifacts
          path:  bls12-381/build/linux-gnu-x86_64/lib
          destination: bls12_381_linux_x86_64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux secp256k1 native build artifacts
          path:  secp256k1/build/linux-gnu-x86_64/lib
          destination: secp256k1_linux_x86_64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux secp256r1 native build artifacts
          path:  secp256r1/besu-native-ec/release/linux-gnu-x86_64
          destination: secp256r1_linux_x86_64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux ipa-multipoint native build artifacts
          path: ipa-multipoint/build/linux-gnu-x86_64/lib
          destination: ipa_multipoint_linux_x86_64_native_artifacts
          when: always

  native-build-linux-aarch64:
    executor: besu_executor_med_linux_arm64
    environment:
      SKIP_GRADLE: true
    steps:
      - checkout_code
      - prepare_linux
      - run:
          name: build
          command: |
            ./build.sh
      - persist_to_workspace:
          root: .
          paths:
            - altbn128/build/linux-gnu-aarch64/lib/*.so*
            - blake2bf/build/linux-gnu-aarch64/lib/*.so*
            - secp256k1/build/linux-gnu-aarch64/lib/*.so*
            - ipa-multipoint/build/linux-gnu-aarch64/lib/*.so
            - secp256r1/besu-native-ec/release/linux-gnu-aarch64/*.so
      - store_artifacts:
          name: Linux altbn128 native build artifacts
          path:  altbn128/build/linux-gnu-aarch64/lib
          destination: altbn128_linux_aarch64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux blake2bf native build artifacts
          path:  blake2bf/build/linux-gnu-aarch64/lib
          destination: blake2bf_linux_aarch64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux secp256k1 native build artifacts
          path:  secp256k1/build/linux-gnu-aarch64/lib
          destination: secp256k1_linux_aarch64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux secp256r1 native build artifacts
          path:  secp256r1/besu-native-ec/release/linux-gnu-aarch64
          destination: secp256r1_linux_aarch64_native_artifacts
          when: always
      - store_artifacts:
          name: Linux ipa-multipoint native build artifacts
          path: ipa-multipoint/build/linux-gnu-aarch64/lib
          destination: ipa_multipoint_linux_aarch64_native_artifacts
          when: always
  native-build-macos:
    executor: besu_executor_med_macos
    environment:
      SKIP_GRADLE: true
    steps:
      - checkout_code
      - prepare_macos
      - run:
          name: build
          command: |
            ./build.sh
      - persist_to_workspace:
          root: .
          paths:
            - altbn128/build/darwin/lib/*.*dylib*
            - bls12-381/build/darwin/lib/*.*dylib*
            - secp256k1/build/darwin/lib/*.*dylib*
            - ipa-multipoint/build/darwin/lib/*.dylib
            - secp256r1/besu-native-ec/release/darwin/*.dylib
      - store_artifacts:
          name: macOS altbn128 native build artifacts
          path:  altbn128/build/darwin/lib
          destination: altbn128_macOS_native_artifacts
          when: always
      - store_artifacts:
          name: macOS bls12-381 native build artifacts
          path:  bls12-381/build/darwin/lib
          destination: bls12_381_macOS_native_artifacts
          when: always
      - store_artifacts:
          name: macOS secp256k1 native build artifacts
          path:  secp256k1/build/darwin/lib
          destination: secp256k1_macOS_native_artifacts
          when: always
      - store_artifacts:
          name: macOS secp256r1 native build artifacts
          path:  secp256r1/besu-native-ec/release/darwin
          destination: secp256r1_macOS_native_artifacts
          when: always
      - store_artifacts:
          name: macOS ipa-multipoint native build artifacts
          path: ipa-multipoint/build/darwin/lib
          destination: ipa_multipoint_macOS_native_artifacts
          when: always
  final-assembly:
    executor: besu_executor_med_linux
    steps:
      - checkout_code
      - attach_workspace:
          at: .
      - run:
          name: gradle
          command: |
            ./gradlew --no-daemon --parallel build
      - persist_to_workspace:
          root: .
          paths:
            - altbn128/build/libs/*.jar
            - blake2bf/build/libs/*.jar
            - bls12-381/build/libs/*.jar
            - secp256k1/build/libs/*.jar
            - secp256r1/build/libs/*.jar
            - ipa-multipoint/build/libs/*.jar
      - store_artifacts:
          name: Final altbn128 build artifacts
          path: altbn128/build/libs
          destination: secp256k1_jars
          when: always
      - store_artifacts:
          name: Final blake2bf build artifacts
          path: blake2bf/build/libs
          destination: blake2bf_jars
          when: always
      - store_artifacts:
          name: Final bls12-381 build artifacts
          path: bls12-381/build/libs
          destination: secp256k1_jars
          when: always
      - store_artifacts:
          name: Final secp256k1 build artifacts
          path: secp256k1/build/libs
          destination: secp256k1_jars
          when: always
      - store_artifacts:
          name: Final secp256r1 build artifacts
          path: secp256r1/build/libs
          destination: secp256r1_jars
          when: always
      - store_artifacts:
          name: Final ipa-multipoint build artifacts
          path: ipa-multipoint/build/libs
          destination: secp256k1_jars
          when: always
  publish:
    executor: besu_executor_med_linux
    steps:
      - checkout_code
      - attach_workspace:
          at: .
      - run:
          name: Publish
          command: |
            ./gradlew --no-daemon --parallel publish artifactoryPublish
workflows:
  version: 2
  default:
    jobs:
      - native-build-linux-x86-64
      - native-build-linux-aarch64
      - native-build-macos
      - final-assembly:
          requires:
            - native-build-linux-x86-64
            - native-build-linux-aarch64
            - native-build-macos
      - publish:
          filters:
            branches:
              only:
                - main
                - /^release-.*/
          requires:
            - final-assembly

