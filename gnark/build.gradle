/*
 * Copyright contributors to Besu.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '5.2.3'
}

// Configure source sets - separate GraalVM classes from main JAR
sourceSets {
  graal {
    java {
      srcDir 'src/main/java'
      include '**/*Graal*.java'
    }
    // Graal source set needs access to main source set classes
    compileClasspath += sourceSets.main.output
  }
  main {
    java {
      exclude '**/*Graal*.java'
    }
  }
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.12.1'
    implementation project(':common')

    // GraalVM SDK only for graal source set
    graalImplementation 'org.graalvm.sdk:graal-sdk:24.0.2'
    graalImplementation project(':common')
    graalImplementation 'net.java.dev.jna:jna:5.12.1'
    testImplementation 'com.google.guava:guava:31.1-jre'
    testImplementation 'net.java.dev.jna:jna:5.12.1'
    testImplementation 'io.consensys.tuweni:tuweni-bytes:2.7.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.mockito:mockito-core:4.4.0'
}

// Dynamic library copy tasks (for JNA)
task macArmLibCopy(type: Copy) {
    from 'build/darwin-aarch64/lib/libgnark_jni.dylib'
    from 'build/darwin-aarch64/lib/libgnark_eip_2537.dylib'
    from 'build/darwin-aarch64/lib/libgnark_eip_196.dylib'
    into 'build/resources/main/lib/aarch64'
}
processResources.dependsOn macArmLibCopy

task macLibCopy(type: Copy) {
    from 'build/darwin-x86-64/lib/libgnark_jni.dylib'
    from 'build/darwin-x86-64/lib/libgnark_eip_2537.dylib'
    from 'build/darwin-x86-64/lib/libgnark_eip_196.dylib'
    into 'build/resources/main/lib/x86-64'
}
processResources.dependsOn macLibCopy

task linuxLibCopy(type: Copy) {
    from 'build/linux-gnu-x86_64/lib/libgnark_jni.so'
    from 'build/linux-gnu-x86_64/lib/libgnark_eip_2537.so'
    from 'build/linux-gnu-x86_64/lib/libgnark_eip_196.so'
    into 'build/resources/main/lib/x86-64'
}
processResources.dependsOn linuxLibCopy

task linuxArm64LibCopy(type: Copy) {
    from 'build/linux-gnu-aarch64/lib/libgnark_jni.so'
    from 'build/linux-gnu-aarch64/lib/libgnark_eip_2537.so'
    from 'build/linux-gnu-aarch64/lib/libgnark_eip_196.so'
    into 'build/resources/main/lib/aarch64'
}
processResources.dependsOn linuxArm64LibCopy

task linuxRiscv64LibCopy(type: Copy) {
    from 'build/linux-gnu-riscv64/lib/libgnark_jni.so'
    from 'build/linux-gnu-riscv64/lib/libgnark_eip_2537.so'
    from 'build/linux-gnu-riscv64/lib/libgnark_eip_196.so'
    into 'build/resources/main/lib/riscv64'
}
processResources.dependsOn linuxRiscv64LibCopy

// Static library copy tasks (for GraalVM native-image)
task macArmStaticLibCopy(type: Copy) {
    from 'build/darwin-aarch64/lib/libgnark_jni.a'
    from 'build/darwin-aarch64/lib/libgnark_eip_2537.a'
    from 'build/darwin-aarch64/lib/libgnark_eip_196.a'
    from 'build/darwin-aarch64/lib/libgnark_jni.h'
    from 'build/darwin-aarch64/lib/libgnark_eip_2537.h'
    from 'build/darwin-aarch64/lib/libgnark_eip_196.h'
    into 'build/resources-static/lib/aarch64'
}

task macStaticLibCopy(type: Copy) {
    from 'build/darwin-x86-64/lib/libgnark_jni.a'
    from 'build/darwin-x86-64/lib/libgnark_eip_2537.a'
    from 'build/darwin-x86-64/lib/libgnark_eip_196.a'
    from 'build/darwin-x86-64/lib/libgnark_jni.h'
    from 'build/darwin-x86-64/lib/libgnark_eip_2537.h'
    from 'build/darwin-x86-64/lib/libgnark_eip_196.h'
    into 'build/resources-static/lib/x86-64'
}

task linuxStaticLibCopy(type: Copy) {
    from 'build/linux-gnu-x86_64/lib/libgnark_jni.a'
    from 'build/linux-gnu-x86_64/lib/libgnark_eip_2537.a'
    from 'build/linux-gnu-x86_64/lib/libgnark_eip_196.a'
    from 'build/linux-gnu-x86_64/lib/libgnark_jni.h'
    from 'build/linux-gnu-x86_64/lib/libgnark_eip_2537.h'
    from 'build/linux-gnu-x86_64/lib/libgnark_eip_196.h'
    into 'build/resources-static/lib/x86-64'
}

task linuxArm64StaticLibCopy(type: Copy) {
    from 'build/linux-gnu-aarch64/lib/libgnark_jni.a'
    from 'build/linux-gnu-aarch64/lib/libgnark_eip_2537.a'
    from 'build/linux-gnu-aarch64/lib/libgnark_eip_196.a'
    from 'build/linux-gnu-aarch64/lib/libgnark_jni.h'
    from 'build/linux-gnu-aarch64/lib/libgnark_eip_2537.h'
    from 'build/linux-gnu-aarch64/lib/libgnark_eip_196.h'
    into 'build/resources-static/lib/aarch64'
}

task linuxRiscv64StaticLibCopy(type: Copy) {
    from 'build/linux-gnu-riscv64/lib/libgnark_jni.a'
    from 'build/linux-gnu-riscv64/lib/libgnark_eip_2537.a'
    from 'build/linux-gnu-riscv64/lib/libgnark_eip_196.a'
    from 'build/linux-gnu-riscv64/lib/libgnark_jni.h'
    from 'build/linux-gnu-riscv64/lib/libgnark_eip_2537.h'
    from 'build/linux-gnu-riscv64/lib/libgnark_eip_196.h'
    into 'build/resources-static/lib/riscv64'
}

// Task to prepare static resources
task prepareStaticResources {
    dependsOn macArmStaticLibCopy, macStaticLibCopy, linuxStaticLibCopy,
              linuxArm64StaticLibCopy, linuxRiscv64StaticLibCopy
}

jar {
    archiveBaseName = 'besu-native-gnark'
    includeEmptyDirs = false
    manifest {
        attributes(
                'Specification-Title': archiveBaseName,
                'Specification-Version': project.version,
                'Implementation-Title': archiveBaseName,
                'Implementation-Version': project.version,
                'Automatic-Module-Name': 'org.hyperledger.besu.nativelib.gnark'
        )
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveBaseName = 'besu-native-gnark'
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveBaseName = 'besu-native-gnark'
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task staticJar(type: Jar, dependsOn: [prepareStaticResources, graalClasses]) {
    archiveBaseName = 'besu-native-gnark'
    archiveClassifier = 'static'
    from 'build/resources-static'
    from sourceSets.graal.output
    includeEmptyDirs = false
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "org.hyperledger.besu"
            artifactId "gnark"
            version "${project.version}"

            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact staticJar

            pom {
                name = "Besu Native - ${project.name}"
                description = 'Gnark'
                url = 'http://github.com/hyperledger/besu-native'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/hyperledger/besu-native.git'
                    developerConnection = 'scm:git:ssh://github.com/hyperledger/besu-native.git'
                    url = 'https://github.com/hyperledger/besu-native'
                }
            }
        }
    }
}

def artifactoryUser = project.hasProperty('artifactoryUser') ? project.property('artifactoryUser') : System.getenv('ARTIFACTORY_USER')
def artifactoryKey = project.hasProperty('artifactoryApiKey') ? project.property('artifactoryApiKey') : System.getenv('ARTIFACTORY_KEY')
def artifactoryRepo = System.getenv('ARTIFACTORY_REPO') ?: 'besu-maven'
def artifactoryOrg = System.getenv('ARTIFACTORY_ORG') ?: 'hyperledger'

artifactory {
    contextUrl = "https://hyperledger.jfrog.io/${artifactoryOrg}"
    publish {
        repository {
            repoKey = artifactoryRepo
            username = artifactoryUser
            password = artifactoryKey
        }
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            publishPom = true
        }
    }
}
